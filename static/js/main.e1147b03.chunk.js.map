{"version":3,"sources":["components/Container/Container.module.css","components/Container/Container.js","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","Typography","variant","gutterBottom","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handelSubmit","preventDefault","props","formSubmitHandler","reset","this","onSubmit","htmlFor","TextField","label","type","onChange","Button","style","display","marginTop","color","Component","ContactList","contacts","onDeleteContact","List","map","id","ListItem","justifyContent","paddingLeft","marginLeft","onClick","Filter","filter","App","handleSubmit","validationError","validateContact","displayError","prevState","concat","uuidv4","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","find","deleteContact","contactId","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","error","alert","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1147b03.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3j3CW\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nexport default function Container({ children }) {\n    return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n    children: PropTypes.node,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Section({ title, children }) {\n    return (\n        <div>\n            {title && (\n                <Typography variant=\"h2\" gutterBottom>\n                    {title}\n                </Typography>\n            )}\n            {children}\n        </div>\n    );\n}\n\nSection.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node,\n};\n","import Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\n\nimport { Component } from 'react';\n\nexport default class ContactForm extends Component {\n    state = {\n        name: '',\n        number: '',\n    };\n\n    handleChange = e => {\n        const { name, value } = e.currentTarget;\n        this.setState({ [name]: value });\n    };\n\n    handelSubmit = e => {\n        const { name, number } = this.state;\n\n        e.preventDefault();\n\n        this.props.formSubmitHandler(name, number);\n        this.reset();\n    };\n\n    reset = () => {\n        this.setState({ name: '', number: '' });\n    };\n\n    render() {\n        const { name, number } = this.state;\n        return (\n            <form onSubmit={this.handelSubmit}>\n                <label htmlFor=\"\">\n                    <Typography variant=\"h6\" gutterBottom>\n                        Name\n                    </Typography>\n                    <TextField\n                        label=\"Enter name\"\n                        variant=\"outlined\"\n                        type=\"text\"\n                        name=\"name\"\n                        value={name}\n                        onChange={this.handleChange}\n                    />\n                </label>\n                <label htmlFor=\"\">\n                    <Typography variant=\"h6\" gutterBottom>\n                        Number\n                    </Typography>\n                    <TextField\n                        label=\"Enter number\"\n                        variant=\"outlined\"\n                        type=\"text\"\n                        name=\"number\"\n                        value={number}\n                        onChange={this.handleChange}\n                    />\n                </label>\n\n                <Button\n                    style={{\n                        display: 'block',\n                        marginTop: '10px',\n                    }}\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                >\n                    Add contacts\n                </Button>\n            </form>\n        );\n    }\n}\n\nContactForm.propTypes = {\n    formSubmitHandler: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function ContactList({ contacts, onDeleteContact }) {\n    return (\n        <List>\n            {contacts.map(({ id, name, number }) => (\n                <ListItem\n                    style={{\n                        justifyContent: 'space-between',\n                        paddingLeft: '0',\n                    }}\n                    key={id}\n                >\n                    <Typography variant=\"h6\" gutterBottom>\n                        {name}: {number}\n                    </Typography>\n\n                    <Button\n                        style={{\n                            marginLeft: '10px',\n                        }}\n                        type=\"button\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => {\n                            onDeleteContact(id);\n                        }}\n                    >\n                        Delete\n                    </Button>\n                </ListItem>\n            ))}\n        </List>\n    );\n}\nContactList.propTypes = {\n    onDeleteContact: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n            id: PropTypes.string.isRequired,\n        }),\n    ),\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function Filter({ filter, onChange }) {\n    return (\n        <label>\n            <Typography variant=\"h6\" gutterBottom>\n                Find contacts by name\n            </Typography>\n            <TextField\n                label=\"Enter name\"\n                variant=\"outlined\"\n                type=\"text\"\n                value={filter}\n                onChange={onChange}\n            />\n        </label>\n    );\n}\n\nFilter.propTypes = {\n    filter: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n};\n","import { v4 as uuidv4 } from 'uuid';\nimport './App.css';\nimport { Component } from 'react';\nimport Container from './components/Container/Container';\nimport Section from './components/Section/Section';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n    state = {\n        contacts: [\n            { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n            { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n            { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n        ],\n        filter: '',\n    };\n\n    componentDidMount() {\n        const contacts = localStorage.getItem('contacts');\n        const parsedContacts = JSON.parse(contacts);\n        if (parsedContacts) {\n            this.setState({ contacts: parsedContacts });\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { contacts } = this.state;\n        if (contacts !== prevState.contacts) {\n            localStorage.setItem('contacts', JSON.stringify(contacts));\n        }\n    }\n\n    handleSubmit = (name, number) => {\n        const validationError = this.validateContact(name, number);\n        if (validationError) {\n            this.displayError(validationError);\n        } else {\n            this.setState(prevState => ({\n                contacts: prevState.contacts.concat({\n                    id: uuidv4(),\n                    name,\n                    number,\n                }),\n            }));\n        }\n    };\n\n    changeFilter = e => {\n        this.setState({ filter: e.currentTarget.value });\n    };\n\n    getVisibleContacts = () => {\n        const normalizedFilter = this.state.filter.toLowerCase();\n        return this.state.contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedFilter),\n        );\n    };\n\n    validateContact = (name, number) => {\n        if (name === '' || number === '') {\n            return 'Please add contact';\n        }\n\n        const { contacts } = this.state;\n        const existingContact = contacts.find(contact => contact.name === name);\n        if (existingContact) {\n            return `${name} is already in contacts!`;\n        }\n    };\n\n    displayError(error) {\n        alert(error);\n    }\n\n    deleteContact = contactId => {\n        this.setState(prevState => ({\n            contacts: prevState.contacts.filter(\n                contact => contact.id !== contactId,\n            ),\n        }));\n    };\n\n    render() {\n        const { filter } = this.state;\n\n        const visibleContacts = this.getVisibleContacts();\n        return (\n            <Container>\n                <Section title=\"Phonebook\">\n                    <ContactForm formSubmitHandler={this.handleSubmit} />\n                </Section>\n                <Section title=\"Contacts\">\n                    <Filter value={filter} onChange={this.changeFilter} />\n                    <ContactList\n                        contacts={visibleContacts}\n                        onDeleteContact={this.deleteContact}\n                    />\n                </Section>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'fontsource-roboto';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}